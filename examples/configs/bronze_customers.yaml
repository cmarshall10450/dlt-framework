# Bronze layer configuration with Auto Loader source
source:
  type: "auto_loader"
  path: "s3://my-bucket/raw/customers"
  format: "cloudFiles"
  options:
    cloudFiles.format: "json"
    cloudFiles.inferColumnTypes: "true"
    cloudFiles.schemaHints: '{"customer_id": "string", "email": "string"}'
    cloudFiles.schemaEvolution.enabled: "true"

table:
  name: "raw_customers"
  catalog: "main"
  schema: "bronze"
  description: "Raw customer data ingested from JSON files"
  properties:
    delta.autoOptimize.optimizeWrite: "true"
    delta.autoOptimize.autoCompact: "true"
    pipelines.reset: "false"
  tags:
    domain: "customer"
    data_owner: "customer_success"
    sensitivity: "confidential"
  column_comments:
    customer_id: "Unique identifier for the customer"
    email: "Customer's email address"
    created_at: "Timestamp when the customer record was created"

monitoring:
  expectations:
    - name: "valid_customer_id"
      constraint: "customer_id IS NOT NULL AND LENGTH(customer_id) = 36"
      description: "Ensure customer ID is a valid UUID"
      severity: "error"
    - name: "valid_email"
      constraint: "email IS NOT NULL AND email RLIKE '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$'"
      description: "Ensure email is in valid format"
      severity: "error"
  metrics:
    - name: "total_records"
      value: "COUNT(*)"
      description: "Total number of records ingested"
    - name: "invalid_emails"
      value: "COUNT(CASE WHEN NOT email RLIKE '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$' THEN 1 END)"
      description: "Count of invalid email addresses"

dependencies:
  - "raw_customer_landing_zone"

version: "1.0" 